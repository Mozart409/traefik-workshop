version: '3.7'
services:
  socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: socket-proxy

    volumes:
      #- /var/run/docker.sock:/var/run/docker.sock

      # Linux only
      - /var/run/user/1000/docker.sock:/var/run/docker.sock:ro
    environment:
      CONTAINERS: 1
    networks:
      - proxy

  traefik:
    depends_on:
      - socket-proxy
    image: traefik:2.6
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'
    networks:
      - proxy

    volumes:
      # Traefik configuration file
      - ./traefik.yml:/traefik.yml

  zipkin:
    image: openzipkin/zipkin-slim
    networks:
      - proxy
    ports:
      - 9411:9411
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.zipkin.rule=Host(`zipkin.docker.localhost`)'

  redis:
    image: bitnami/redis:6.2
    ports:
      - '6379:6379'
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - proxy
    labels:
      - 'traefik.enable=false'

  redisinsight:
    image: redislabs/redisinsight
    networks:
      - proxy
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.redisinsight.rule=Host(`redisinsight.docker.localhost`)'
      - 'traefik.http.routers.redisinsight.entrypoints=http'

  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    scale: 3
    networks:
      - proxy
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)'
      - 'traefik.http.routers.whoami.entrypoints=http'
      - 'traefik.http.middlewares.http-ratelimit.ratelimit.average=50'
      - 'traefik.http.middlewares.http-ratelimit.ratelimit.burst=100'
      - 'traefik.http.middlewares.http-ratelimit.ratelimit.period=1'
      - 'traefik.http.routers.whoami.middlewares=http-ratelimit@docker'

  fiboservice:
    build:
      context: apps/fiboService/
      dockerfile: Dockerfile
    scale: 3
    networks:
      - proxy
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.fiboservice.rule=Host(`fibo.docker.localhost`)'
      - 'traefik.http.routers.fiboservice.entrypoints=http'

  nextjs:
    build:
      context: apps/nextjs-redis/
      dockerfile: Dockerfile
    scale: 3
    environment:
      - REDIS_URL=redis://localhost:6379
    networks:
      - proxy
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.next.rule=Host(`next.docker.localhost`)'
      - 'traefik.http.routers.next.entrypoints=http'

networks:
  proxy:
    external: true
    driver: bridge
